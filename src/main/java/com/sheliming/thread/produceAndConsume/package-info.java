package com.sheliming.thread.produceAndConsume;
/**
 * 生产者消费者问题是多线程的一个经典问题，它描述是有一块缓冲区作为仓库，生产者可以将产品放入仓库，消费者则可以从仓库中取走产品。
 * <p>
 * 解决生产者/消费者问题的方法可分为两类：
 * <p>
 * 采用某种机制保护生产者和消费者之间的同步；
 * 在生产者和消费者之间建立一个管道。
 * 第一种方式有较高的效率，并且易于实现，代码的可控制性较好，属于常用的模式。第二种管道缓冲区不易控制，被传输数据对象不易于封装等，实用性不强。
 * <p>
 * 在Java中有四种方法支持同步，其中前三个是同步方法，一个是管道方法。
 * <p>
 * 1.wait() / notify()方法
 * 2.await() / signal()方法
 * 3.BlockingQueue阻塞队列方法
 * 4.PipedInputStream / PipedOutputStream
 **/